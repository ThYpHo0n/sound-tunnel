# Ruff configuration for Sound Tunnel
# See https://docs.astral.sh/ruff/configuration/

# Exclude common directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".creds",
]

# Same as Black's default line length
line-length = 88
indent-width = 4

# Assume Python 3.9+
target-version = "py39"

[lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default
# Plus some additional useful rules
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "I",      # isort
    "N",      # pep8-naming
    "C4",     # flake8-comprehensions
    "ICN",    # flake8-import-conventions
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "PYI",    # flake8-pyi
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "TID",    # flake8-tidy-imports
    "TCH",    # flake8-type-checking
    "INT",    # flake8-gettext
]

ignore = [
    "E501",   # Line too long (handled by formatter)
    "B008",   # Do not perform function calls in argument defaults
    "T201",   # Print found (we use prints for CLI output)
    "B904",   # Within an `except` clause, raise exceptions with `raise ... from err`
]

# Allow fix for all enabled rules (when `--fix`) is provided
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings
quote-style = "double"

# Like Black, indent with spaces, rather than tabs
indent-style = "space"

# Like Black, respect magic trailing commas
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending
line-ending = "auto"

[lint.per-file-ignores]
# Tests can use magic values, assertions, and longer lines
"tests/**/*.py" = [
    "PLR2004",  # Magic value used in comparison
    "S101",     # Use of assert detected
    "PT011",    # pytest.raises({exception}) is too broad
]

# Config files can have longer lines and different naming
"config/*.py" = [
    "N999",     # Invalid module name
]

[lint.isort]
known-first-party = ["src", "config"]
force-single-line = false
